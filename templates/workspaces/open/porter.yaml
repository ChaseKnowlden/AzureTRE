name: tre-workspace-open
version: 0.1.8
description: "Unrestricted access to the Internet"
registry: azuretre
dockerfile: Dockerfile.tmpl

credentials:
  - name: azure_tenant_id
    env: ARM_TENANT_ID
  - name: azure_subscription_id
    env: ARM_SUBSCRIPTION_ID
  - name: azure_client_id
    env: ARM_CLIENT_ID
  - name: azure_client_secret
    env: ARM_CLIENT_SECRET

parameters:
  - name: tre_id
    type: string
    description: "The ID of the parent TRE instance e.g., mytre-dev-3142"
  - name: workspace_id
    type: string
    description: "Unique 4-character long, alphanumeric workspace ID"
    minLength: 4
    maxLength: 4
  - name: azure_location
    env: LOCATION
    type: string
    description: "Azure location (region) to deploy to"
  - name: address_space
    type: string
    description: "VNet address space for the workspace services"
    default: "10.2.1.0/24"
  - name: acr_name
    type: string
    description: "Name of the azure container registry"
  - name: tfstate_resource_group_name
    type: string
    description: "Resource group containing the Terraform state storage account"
    env: MGMT_RESOURCE_GROUP_NAME
  - name: tfstate_storage_account_name
    type: string
    description: "The name of the Terraform state storage account"
    env: MGMT_STORAGE_ACCOUNT_NAME
  - name: tfstate_container_name
    type: string
    default: "tfstate"
    description: "The name of the Terraform state storage container"
    env: TERRAFORM_STATE_CONTAINER_NAME
  - name: arm_use_msi
    env: ARM_USE_MSI
    default: false

mixins:
  - exec
  - az
  - docker
  - terraform:
      clientVersion: 0.15.4

install:
  - az:
      description: "az login"
      arguments:
        - login
      flags:
        identity:
        username: "{{ bundle.credentials.azure_client_id}}"
  - az:
      description: "acr login"
      arguments:
        - acr
        - login
      flags:
        name: "{{ bundle.parameters.acr_name }}"
  - exec:
      description: "Install Vanilla Workspace service"
      command: ./install_workspace_vanilla.sh
  - terraform:
      description: "Deploy workspace"
      input: false
      vars:
        tre_id: "{{ bundle.parameters.tre_id }}"
        workspace_id: "{{ bundle.parameters.workspace_id }}"
        location: "{{ bundle.parameters.azure_location }}"
        address_space: "{{ bundle.parameters.address_space }}"
        arm_use_msi: "{{ bundle.parameters.arm_use_msi }}"
        arm_client_id: "{{ bundle.credentials.azure_client_id }}"
        arm_client_secret: "{{ bundle.credentials.azure_client_secret }}"
        arm_tenant_id: "{{ bundle.credentials.azure_tenant_id }}"
        acr_name: "{{ bundle.parameters.acr_name }}"
      backendConfig:
        resource_group_name: "{{ bundle.parameters.tfstate_resource_group_name }}"
        storage_account_name: "{{ bundle.parameters.tfstate_storage_account_name }}"
        container_name: "{{ bundle.parameters.tfstate_container_name }}"
        key: "{{ bundle.parameters.tre_id }}-ws-{{ bundle.parameters.workspace_id }}"

upgrade:
  - exec:
      description: "Upgrade workspace"
      command: echo
      arguments:
        - "This workspace does not implement upgrade action"

uninstall:
  - terraform:
      description: "Tear down workspace"
      input: false
      vars:
        tre_id: "{{ bundle.parameters.tre_id }}"
        workspace_id: "{{ bundle.parameters.workspace_id }}"
        location: "{{ bundle.parameters.azure_location }}"
        address_space: "{{ bundle.parameters.address_space }}"
        arm_use_msi: "{{ bundle.parameters.arm_use_msi }}"
      backendConfig:
        resource_group_name: "{{ bundle.parameters.tfstate_resource_group_name }}"
        storage_account_name: "{{ bundle.parameters.tfstate_storage_account_name }}"
        container_name: "{{ bundle.parameters.tfstate_container_name }}"
        key: "{{ bundle.parameters.tre_id }}-ws-{{ bundle.parameters.workspace_id }}"
